Здравствуйте, Екатерина!

Вы абсолютно правильно отметили, что для создания игр необходимы навыки написания программного кода. Однако следует взять во внимание, что учиться писать программный код довольно скучно и неинтересно для юных учеников. Детей успешно можно начать обучать написанию программного кода примерно с 7-го класса, когда уже на начальном уровне сформирован математический аппарат и, как следствие, аналитическое мышление, потому что процесс написания программного кода по большей своей сути – аналитика и абстракция. Я, наряду с моими коллегами из других школ и университетов, регулярно пробуем обучать написанию программного кода детей с 3-4 классов. И все мы отметили достаточно явную тенденцию: только несколько очень сильно развитых учеников из группы оказываются способны потянуть данную дисциплину, не смотря на многократное повторение, развлекательные интеграции с применением интерактивных, визуальных и психологических методических инструментарных приёмов. Остальным же крайне интересны курсы на подобии «Лего» или «Оригами», а напрягаться и пытаться запомнить несколько строк программного кода они не хотят.
Исходя из отмеченной тенденции был сделан вывод, что «кодингу» можно обучать с ранних лет только в индивидуальном порядке. К слову, у меня имеются такие ученики, данный процесс крайне медленный и трудный для ребёнка, и достаточно дорогостоящий для родителей. Только если ребёнок очень замотивирован научиться программировать (здесь важно учесть, что именно программировать, а не создавать игры), можно рассчитывать на прогресс. Программирование – сложная дисциплина, если очень многие взрослые бросают программирование из-за трудности и не понимания, что можно хотеть от ребёнка. Однако есть и положительные стороны: родители одного из моих учеников отметили, что через два года еженедельных занятий программированием, их сын стал в разы лучше понимать математику, выигрывать олимпиады и вообще поменял стилистику своего мышления и отношения к сложноорганизованным процессам. Я начал работать с ним со второго класса, сейчас он в шестом. За это время мы добились сильных успехов (https://youtu.be/kc89DwUO0Po).
***
Из-за высокой трудности программирования и практически невозможности многих детей освоить данный навык (в основном из-за того, что код это не про красивые картинки, не про «Лего», а про голую абстрактную математику), а также из-за огромной любви у детей к играм и, как следствие, не менее огромного желания эти игры создавать самому, американская компания «Unity Technologies» создала игровой движок Unity, где можно без знаний программирования интуитивно на уровне конструктора-песочницы создать что-то похожее на игру.
Разумеется, необходимо понимать, что для создания даже самой простой игры нужно колоссальное количество времени, проведённого в данной песочнице. Unity не является простым, это правда, но создавать игры самому с чистого блокнота без движка можно только при помощи кода. Есть замечательная библиотека PyGame, на которой лично я обучаю учеников писать игры (ссылка с примером: https://youtu.be/kc89DwUO0Po), но к данной библиотеке необходимо приложить знание Python, поэтому параллельно ученики ходят в группы по Python и изучают его.
Unity же прекрасен тем, что «кодинг» так таковой для обучения базовым навыкам не требуется, нужно лишь прописывать инструкции для клавиш. Отсюда, к сожалению, и возникает излишняя сложность Unity с точки зрения освоения и понимания.
***
Подытоживая, следует отметить, что создание игр – сложная вещь, однозначно требующая умения программировать. И есть два пути к обучению создания игр:
Первый: можно сразу погрузить ребёнка в жуткие строки кода и надеяться, что его терпения и заинтересованности математическими абстракциями хватит, чтобы дойти до применения чистого кода с целью создания игры, а затем, используя созданную базу, нужно начать наращивать опытный каркас по интегрированию полученных навыков «кодинга» в программу обучения созданию игр. И сколько времени займёт данная процедура – неизвестно.
Второй путь: можно начать сразу со второго этапа, отложив обучение кодингу на потом. Для этого есть такой движок, как Unity, на котором можно создать довольно крутые игры без явного программирования, и уже делиться такими играми с одноклассниками. Смысл создания таких игр – научить ребёнка мыслить в другой проекции, понимать, что значит в нативном смысле – создание игры. К слову, затем всё равно необходимо научиться программировать, чтобы игры стали пригодными к публикации. Именно этим занимается Тимур, он показывает возможности Unity, демонстрирует его функционал. И обучает ученика собирать базовые игровые сцены (не дизайн, не моделирование объектов и текстур, а игровые сцены).
***
Про командную работу следует отметить несколько важных моментов. Это безусловно хорошо, так как повышает интерес, командный дух, приносит в обучение атмосферу соревнований, совместной работы, но нужно иметь в виду, что при командном формате в разы снижается продуктивность, так как большая часть мозговой активности учащегося идёт на общение, азарт и ребячество. Тем более в юном возрасте. Да, это не плохо, «играя обучайся», но это может показаться многим родителями абсолютно не продуктивным, плюс дети очень разные с точки зрения развития, многие схватывают быстро и начинают развлекаться, мешая тем, кто схватывает долго. Большинство групп рано или поздно переходит на индивидуальный формат, чтобы получить максимум, затрачивая меньше времени (и, само собой, больше средств, но самый ценный ресурс – это время, и крайне нерационально тратить 500₽ и возиться с чём-то четыре часа, когда можно потратить 1500₽ и пройти тоже самое за час).
***
Касаемо Python. Это не «более базовый инструмент», это язык программирования. И, как я уже написал, я преподаю своим ученикам Python и создание игр при помощи библиотеки PyGame, которая с точки зрения сопоставления является аналогом Unity, но, как я уже отметил, требует в разы большего внимания к «кодингу». В частности, «кодингу» на Python.
***
По поводу ставки и стоимости занятий не хотелось бы поднимать вопрос ценообразования с учётом рыночных условий, но изначально озвученная ставка в 1350₽ за академ час индивидуального формата с преподавателем с учётом имеющегося сервиса, на наш взгляд, не является завышенной. Наши личные ученики (не от школы) занимаются по ставкам от 2500₽ за академ час. Дело здесь исключительно в бюджете и понимании. На нашем опыте есть ситуации, когда клиенту лучше три года платить по 1000₽ за час, получая соответствующее качество, и не получать никакого сервиса. В этом нет ничего плохого, у наших коллег, которые не являются достаточно квалифицированными, много таких учеников.
В силу очевидного скепсиса касаемо нашей ставки, мы хотели бы порекомендовать Вам попробовать воспользоваться курсами других форматов (более дешёвых, более массовых и очень хорошо раскрученных). К сожалению, таким образом можно безвозвратно потерять ценное время и упустить возможность опередить сверстников в прогрессе и развитии математического аппарата наряду с получением ценных навыков создания игр и программирования, однако с уверенностью следует отметить, что таким образом можно получить ценнейший и незаменимый опыт. Мы не предпочитаем как-либо настаивать на каких-либо точках зрения и уж тем более склонять к изменению мнения о чём-либо, мы придерживаемся очень прозрачной политики «не попробуешь – не узнаешь».
До начала занятий с Артёмом все условия были озвучены, в процессе занятий мы не повышали ставку в одностороннем порядке и никак не нарушали оговорённых условий. Все обязательства с обеих стороны были приведены в исполнение в полном объёме и погашены. По запросу снизить стоимость мы практически убрали нашу надбавку на занятия, следуя исключительно из благородных побуждений просвещения и обучения, не нарушая договорных обязательств перед Тимуром. Мы сожалеем, что сниженная ставка не подошла Вам по бюджету, но нарушить договор с Тимуром мы не в праве.
***
Немного о системе. Курс Unity для детей действительно относительно молодой проект, стартовавший только в январе этого года. Тимур – автор и преподаватель данного курса вызвался поработать для нас, реализуя свой курс по Unity. По этому курсу есть ученики. Сегодня поздним вечером мы будем созваниваться с Тимуром и обсуждать ситуацию с Артёмом. Также мы попросим Тимура продемонстрировать прогресс Артёма и проекты других ребят. 
По итогу совещания мы сформируем комментарий и с радостью ответим на поставленные Вами вопросы. 
***
От себя хотим добавить, что, просматривая занятия с Артёмом, трудно не заметить интерес и внимание Артёма к данному предмету, что является достаточно положительным показателем. Будет грустно, если возможный талант Артёма к программированию не будет раскрыт и подкреплён должным образом. Мы искренне надеемся, что у Артёма всё получится!
