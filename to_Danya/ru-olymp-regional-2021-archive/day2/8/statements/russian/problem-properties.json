{"scoring":"Баллы за каждую подзадачу начисляются только в случае, если все тесты для этой\r\nподзадачи и необходимых подзадач успешно пройдены.\r\n\r\n\\begin{center}\r\n\\renewcommand{\\arraystretch}{1.3}\r\n\\begin{tabular}{|c|c|c|c|c|}\r\n\\hline\r\n\\textbf{Подзадача} & \r\n\\textbf{Баллы} & \r\n\\textbf{Ограничения} & \r\n\\parbox{3cm}{\\textbf{\\centering\\\\Необходимые\\\\подзадачи\\\\\\vspace{2mm}}} & \r\n\\parbox{3cm}{\\textbf{\\centering\\\\Информация\\\\о проверке\\\\\\vspace{2mm}}} \r\n\\\\ \\hline\r\n1 & 7 & $2 \\leq n \\leq 6$ & & первая ошибка \\\\\r\n\\hline\r\n2 & 14 & $2 \\leq n \\leq 18$ & 1  & первая ошибка\\\\\r\n\\hline\r\n3 & 15 & $2 \\leq n \\leq 200$, нет цифры ноль &  & первая ошибка\\\\\r\n\\hline\r\n4 & 5 & $2 \\leq n \\leq 200$ & 1--3  & первая ошибка\\\\\r\n\\hline\r\n5 & 17 & $2 \\leq n \\leq 750$, нет цифры ноль & 3  & первая ошибка\\\\\r\n\\hline\r\n6 & 5 & $2 \\leq n \\leq 750$ & 1--5  & первая ошибка\\\\\r\n\\hline\r\n7 & 20 & $2 \\leq n \\leq 2 \\cdot 10^5$, нет цифры ноль & 3, 5  & первая ошибка\\\\\r\n\\hline\r\n8 & 17 & $2 \\leq n \\leq 2 \\cdot 10^5$ & 1--7 & первая ошибка\\\\\r\n\\hline\r\n\\end{tabular}\r\n\\end{center}","notes":"В первом примере подходят все перестановки столбцов.\r\n\r\nВо втором примере единственная подходящая перестановка~--- $10+20=30$. $01+02=03$ не считается из-за наличия ведущих нулей.\r\n\r\nВ третьем примере возможны варианты $10121+21909=32030$ и $12101+20919=33020$, причём каждый из них может быть получен двумя разными перестановками.","legend":"Рассмотрим $a$, $b$ и $c$~--- целые неотрицательные числа, записанные в десятичной системе счисления. Пусть они имеют одинаковую длину $n$, при этом запись может начинаться с нуля. Числа записаны одно под другим, цифры расположены в три строки и $n$ столбцов. Рассмотрим пример такой записи:\r\n\r\n\\begin{center}\r\n\\texttt{01211}\\\\\r\n\\texttt{12099}\\\\\r\n\\texttt{23300}\r\n\\end{center}\r\n\r\nТребуется переставить столбцы в этой записи таким образом, чтобы выполнялось равенство $a+b=c$. В полученной записи ведущие нули уже запрещены. Сколько существует различных способов это сделать?\r\n\r\nПерестановки столбцов считаются различными, даже если полученные записи совпадают. Например, если в записи выше переставить два последних столбца, получится другая перестановка, хотя цифры в этих колонках совпадают.\r\n\r\nПоскольку ответ может быть довольно большим, требуется посчитать для него остаток по модулю $10^9+7$.","authorLogin":"SpyCheese","language":"russian","timeLimit":1000,"output":"Выведите количество подходящих перестановок столбцов по модулю $10^9+7$.","inputFile":"stdin","outputFile":"stdout","input":"Во входных данных записаны целые неотрицательные числа $a$, $b$ и $c$ по одному в строке. Каждое число состоит из $n$ десятичных цифр и может начинаться с нуля ($2 \\leq n \\leq 2 \\cdot 10^5$).","authorName":"Mikhail Putilin","sampleTests":[{"output":"6\r\n","input":"123\r\n123\r\n246\r\n","inputFile":"example.01","outputFile":"example.01.a"},{"output":"1\r\n","input":"01\r\n02\r\n03\r\n","inputFile":"example.02","outputFile":"example.02.a"},{"output":"4\r\n","input":"01211\r\n12099\r\n23300\r\n","inputFile":"example.03","outputFile":"example.03.a"},{"output":"0\r\n","input":"121\r\n214\r\n999\r\n","inputFile":"example.04","outputFile":"example.04.a"}],"name":"A+B","interaction":null,"memoryLimit":536870912,"tutorial":"\\medskip\r\n\\textit{Автор задачи: Михаил Путилин}\r\n\\medskip\r\n\r\n\\subsection*{Подзадача 1}\r\nПервая подзадача решается перебором $n!$ перестановок.\r\n\r\n\\subsection*{Подзадача 2}\r\nКаждый столбец можно охарактеризовать тремя параметрами (обозначим цифры в нём за $a_i$, $b_i$, $c_i$):\r\n\\begin{enumerate}\r\n\\item Есть ли в нём цифра ноль (это влияет на то, может ли он быть первым).\r\n\\item Требуется ли ему перенос из столбца справа, в зависимости от того, верно $(a_i+b_i) \\mod 10=c_i$ или $(a_i+b_i+1) \\mod 10=c_i$. Если ни одно из этих равенств не выполнено, то ответ $0$. Обозначим этот параметр $needCarry_i \\in \\{0,1\\}$.\r\n\\item Создаёт ли этот столбец перенос через разряд. Это так, когда $a_i+b_i+needCarry_i \\geq 10$. Обозначим этот столбец $makeCarry_i \\in \\{0,1\\}$.\r\n\\end{enumerate}\r\nБудем выбирать перестановку столбцов слева направо. Первым может идти столбец без нулей и не создающий переноса. Если после столбца $i$ идёт столбец $j$, то $needCarry_i=makeCarry_j$. Для последнего столбца $needCarry_i=0$. Получается граф, в котором нужно найти число гамильтоновых путей. Это можно сделать при помощи динамического программирования за $O(2^n n^2)$, решив, таким образом, вторую подзадачу.\r\n\r\n\\subsection*{Подзадачи 3 и 4}\r\n\\begin{center}\r\n\\includegraphics{tutor_graph.eps}\r\n\\end{center}\r\nВ полученном графе есть четыре вида вершин в зависимости от значений $needCarry_i$ и $makeCarry_i$. Обозначим эти виды следующим образом:\r\n\\begin{itemize}\r\n\\item Тип A: $needCarry_i=0$, $makeCarry_i=0$\r\n\\item Тип B: $needCarry_i=1$, $makeCarry_i=0$\r\n\\item Тип C: $needCarry_i=0$, $makeCarry_i=1$\r\n\\item Тип D: $needCarry_i=1$, $makeCarry_i=1$\r\n\\end{itemize}\r\nНа рисунке показано, какие рёбра есть в графе, а также какие вершины могут быть начальными и конечными.\r\n\r\nПосчитать гамильтоновы пути в таком графе можно динамикой за $O(n^4)$: $d_x[A][B][C][D]$~--- число путей, которые заканчиваются в вершине вида $x$ и проходящие через соответствующее число вершин каждого вида. Это решает подзадачу 3.\r\n\r\nЧтобы решить подзадачу 4, нужно учесть, что нельзя начинать со столбца с нулём. Это влияет только на базу динамики: в $d_A[1][0][0][0]$ и $d_B[0][1][0][0]$ нужно записать количество соответствующих столбцов, в которых нет нулей.\r\n\r\n\r\n\\subsection*{Подзадачи 5 и 6}\r\nНа любом пути в таком графе, который начинается в A или B, количество вершин вида B не более чем на один превосходит количество вершин вида C. Это позволяет сократить число состояний в динамике до $O(n^3)$, решив, таким образом, подзадачи 5 и 6.\r\n\r\n\\subsection*{Подзадача 7}\r\nОбозначим за $A$, $B$, $C$, $D$ количество вершин каждого вида. Любой интересующий нас путь выглядит следующим образом:\r\n\r\n$$\\_ B \\_ C \\_ B \\_ C \\_ B \\_ C \\dots B \\_ C \\_$$\r\n\r\nПри этом вершины A расположены в промежутках перед B, а также в последнем. Вершины D расположены в промежутках после B. Кроме того, если $B \\neq C$, то ответ 0.\r\n\r\nЕсли $B=C=0$ и $D>0$, то ответ 0. Если $B=C=0$ и $D=0$, то ответ $A!$.\r\n\r\nЕсли $B=C>0$, то ответом будет произведение следующих чисел:\r\n\\begin{enumerate}\r\n\\item Количество способов расставить вершины B по местам: $B!$\r\n\\item Количество способов расставить вершины C по местам: $B!$\r\n\\item Количество способов расставить $A$ вершин в $B+1$ промежуток с учётом порядка: $\\frac{(A+B)!}{B!}$.\r\n\\item Количество способов расставить $D$ вершин в $B$ промежутков с учётом порядка: $\\frac{(D+B-1)!}{(B-1)!}$.\r\n\\end{enumerate}\r\n\r\nОтвет равен $(A+B)!(D+B-1)!B$. Это решение за $O(n)$ проходит подзадачу 7.\r\n\r\n\\subsection*{Подзадача 8}\r\nОсталось учесть, что среди вершин вида A и B может быть сколько-то вершин, с которых нельзя начинать (столбцы с нулями). Обозначим эти количества за $A_0$ и $B_0$.\r\n\r\nКак и в прошлой подзадаче, если $B=C=0$ и $D>0$, то ответ 0. Если $B=C=0$ и $D=0$, то ответ $(A-1)! \\cdot (A-A_0)$.\r\n\r\nДалее $B=C>0$. Сначала отдельно посчитаем:\r\n\\begin{itemize}\r\n\\item $ans_B$~--- число путей, которые начинаются с вершины вида B. Это означает, что промежутков, в которые можно ставить вершины A, не $B+1$, а $B$. Тогда $ans_B=B! \\cdot B! \\cdot \\frac{(A+B-1)!}{(B-1)!} \\cdot \\frac{(D+B-1)!}{(B-1)!} = (A+B-1)!(D+B-1)!B^2$\r\n\\item $ans_A$~--- число путей, которые начинаются с вершины вида A. $ans_A = (A+B)!(D+B-1)!B-ans_B$\r\n\\end{itemize}\r\n\r\nОтвет равен $ans_A \\cdot \\frac{A-A_0}{A} + ans_B \\cdot \\frac{B-B_0}{B}$."}